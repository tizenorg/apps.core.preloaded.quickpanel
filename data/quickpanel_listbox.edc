/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

//#define DEBUG
//#define DEBUG_TEXT

	styles {
		style {
			name: "ongoing_content_text";
			base: "font=Tizen:style=Roman text_class=tizen align=left valign=top font_size=28 linegap=-6 ellipsis=1.0 color=#828384FF wrap=mixed";
		}
	}

	group {
		name: "quickpanel/listitem/default";

		images {
			image: "quick_icon_bg_02.png" COMP;
		}

		script {
			public ctnt_shown;
			public ctnt_multiline_shown;
		}

		parts {
			part { name: "base";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_ONGOING_HEIGHT + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					max: 9999 QP_THEME_LIST_ITEM_ONGOING_HEIGHT + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					rel1 {
						relative: 0.0 0.0;
					}
					rel2 {
						relative: 1.0 0.0;
					}
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "bg_image";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to:"base";
					rel2.to:"base";
					color: QP_THEME_NOTI_BG_COLOR;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.top";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 16 + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					fixed: 0 1;
					visible: 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.top.text.contents";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 61 + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					fixed: 0 1;
					visible: 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.bottom.mutiline.content";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 0;
					fixed: 0 1;
					visible: 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 1.0;
					align: 0.0 1.0;
				}
			}
			part { name: "elm.padding.bottom.time";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 82;
					fixed: 0 1;
#ifdef DEBUG
					visible: 1;
					color: 0 255 0 255;
#else
					visible: 0;
#endif
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
				}
			}
			part { name: "elm.padding.bottom.progress";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 52;
					fixed: 0 1;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
#ifdef DEBUG
					visible: 1;
					color: 0 0 255 255;
#else
					visible: 0;
#endif
				}
			}
			part { name: "elm.padding.bottom.icon";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 31;
					fixed: 0 1;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.left.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.right.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.top.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					fixed: 0 1;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.content.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to_x:"elm.padding.left.bg";
						to_y:"elm.padding.top.bg";
						relative: 1.0 1.0;
					}
					rel2 {
						to_x:"elm.padding.right.bg";
						to_y:"base";
						relative: 0.0 1.0;
					}
					align: 0.0 0.0;
					visible: 1;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.left";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 28 0;
					fixed: 1 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.right";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 20 0;
					fixed: 1 0;
					rel1.to:"base";
					rel2.to:"base";
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
#ifdef DEBUG
					visible: 1;
					color: 255 0 0 190;
#else
					visible: 0;
#endif
				}
			}
			part { name: "elm.rect.thumbnail";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 124 124;
					fixed: 1 1;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
						to_y: "elm.padding.bottom.icon";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
						to_y: "elm.padding.bottom.icon";
					}
					align: 1.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.thumbnail.bg";
				type: IMAGE;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 0 0;
					rel1 {to: "elm.rect.thumbnail";}
					rel2 {to: "elm.rect.thumbnail";}
					image {
						normal:"quick_icon_bg_02.png";
						border: 0 0 0 0;
						border_scale: 1;
					}
				}
			}
			part { name: "elm.swallow.thumbnail";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					rel1 {
						to: "elm.rect.thumbnail";
					}
					rel2 {
						to: "elm.rect.thumbnail";
					}
					align: 0.5 0.5;
				}
			}
			part { name: "elm.swallow.icon";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 40 40;
					fixed: 1 1;
					rel1 {
						relative: 1.0 1.0;
						to: "elm.rect.thumbnail";
					}
					rel2 {
						relative: 1.0 1.0;
						to: "elm.rect.thumbnail";
					}
					align: 1.0 1.0;
				}
			}
			part { name: "elm.padding.right.slider.bounder";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 202 0;
					fixed: 1 0;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.right";
					}
					visible: 0;
					align: 1.0 0.0;
				}
			}
			part { name: "elm.padding.right.text.bounder";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 144 0;
					fixed: 1 0;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.right";
					}
					visible: 0;
					align: 1.0 0.0;
				}
			}
			part { name: "elm.text.title";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 36;
					align: 0.0 0.0;
					fixed: 0 1;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.padding.top";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.right.text.bounder";
						to_y: "elm.padding.top";
					}
					color: 248 246 239 255;
					text {
						font: "Tizen:style=Regular";
						text_class: "tizen";
						size: 32;
						fit: 0 1;
						ellipsis: 0.0;
						align: 0.0 0.5;
						size_range: 34 44;
					}
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 248 246 239 255;
				}
			}
			part { name: "elm.text.time";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 0 1;
					min: 0 28;
					align: 0.0 1.0;
					rel1 {
						relative: 1.0 0.0;
						to_x: "elm.padding.left";
						to_y: "elm.padding.bottom.time";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right.slider.bounder";
						to_y: "elm.padding.bottom.time";
					}
					color: 255 255 255 255;
					text {
						font: "Tizen:style=Medium";
						text_class: "tizen";
						size: 28;
						align: 1.0 0.0;
					}
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part {
				name: "elm.rect.content";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					min: 0 28;
					fixed: 0 1;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.padding.top.text.contents";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.right.text.bounder";
						to_y: "elm.padding.top.text.contents";
					}
					visible: 0;
				}
			}
			part {
				name: "elm.text.content";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					fixed: 0 1;
					rel1 {
						to: "elm.rect.content";
					}
					rel2 {
						to: "elm.rect.content";
					}
					color: 130 131 132 255;
					text {
						font: "Tizen:style=Roman";
						text_class: "tizen";
						size: 28;
						fit: 0 1;
						ellipsis: 0.0;
						size_range: 26 30;
						align: 0.0 0.5;
					}
					visible: 0;
				}
				description {
					state: "show" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 130 131 132 255;
					visible: 1;
				}
			}
			part {
				name: "elm.rect.content.multiline";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					min: 0 0;
					fixed: 1 1;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.text.title";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right.text.bounder";
						to_y: "elm.padding.bottom.mutiline.content";
					}
					visible: 0;
				}
			}
			part {
				name: "elm.text.content.multiline";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					fixed: 1 1;
					rel1 {
						to: "elm.rect.content.multiline";
					}
					rel2 {
						to: "elm.rect.content.multiline";
					}
					text {
							style: "ongoing_content_text";
							align: 0.0 0.0;
							fit: 0 0;
					}
					visible:0;
				}
				description {
					state: "show" 0.0;
					inherit: "default" 0.0;
					visible:1;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 130 131 132 255;
					visible: 1;
				}
			}
			part {
				name: "elm.box.progress";
				type: BOX;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 20;
					fixed: 0 1;
					align: 0.0 1.0;
					rel1 {
						relative: 1.0 0.0;
						to_x: "elm.padding.left";
						to_y: "elm.padding.bottom.progress";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right.slider.bounder";
						to_y: "elm.padding.bottom.progress";
					}
#ifdef DEBUG
					visible: 1;
					color: 100 100 100 200;
#else
					visible: 0;
#endif
				}
			}
			part {
				name: "elm.swallow.progress";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to: "elm.box.progress";
					}
					rel2 {
						to: "elm.box.progress";
					}
					align: 0.0 0.0;
				}
			}
			part {
				name: "object.layer.touch.background";
				mouse_events: 1;
				repeat_events: 1;
				scale: 1;
				type: RECT;
				description {
					state: "default" 0.0;
					rel1 {to: "base";}
					rel2 {to: "base";}
					color: 0 0 0 0;
				}
			}
			part {
				name: "accessibility";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to: "elm.content.bg";
					}
					rel2 {
						to: "elm.content.bg";
					}
					color: QP_ACCESSIBILITY_TEST_COLOR;
					visible: 1;
				}
			}
		}

		programs {
			program{
				name: "listbox.touch.down";
				signal: "mouse,clicked,1";
				source: "object.layer.touch.background";
				action: SIGNAL_EMIT "selected" "edje";
			}
			program { name: "show_content";
				signal: "elm,state,elm.text.content,active";
				source: "elm";
				script {
					set_state(PART:"elm.text.content", "show", 0.0);
					set_int(ctnt_shown, 1);
				}
			}
			program { name: "show_content_multiline";
				signal: "elm,state,elm.text.content.multiline,active";
				source: "elm";
				script {
					set_state(PART:"elm.text.content.multiline", "show", 0.0);
					set_int(ctnt_multiline_shown, 1);
				}
			}
		}
	}