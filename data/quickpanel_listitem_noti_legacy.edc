/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

//#define DEBUG
//#define DEBUG_TEXT

#define MAKE_PART_SHOW_PROGRAM(PARTNAME)\
		program{\
			name: PARTNAME".object.show";\
			signal: "object.show";\
			source: PARTNAME;\
			action: STATE_SET "show" 0.0;\
			target: PARTNAME;\
		}\

#define MAKE_PART_SHOW_TEXT_PROGRAM(PARTNAME)\
		program{\
			name: PARTNAME".text.show";\
			signal: "object.show";\
			source: PARTNAME;\
			action: STATE_SET "show" 0.0;\
			target: PARTNAME;\
		}\
		program{\
			name: PARTNAME".text.show.efect";\
			signal: "object.show.effect";\
			source: PARTNAME;\
			action: STATE_SET "show.effect" 0.0;\
			target: PARTNAME;\
		}\

images {
	image: "quick_image_dimmed_port.png" COMP;
	image: "quick_image_dimmed_land.png" COMP;
	image: "icon_press.png" COMP;
}

#define BOX_FONT_SHADOW_COLOR 0 0 0 191
#define BOX_FONT_OUTLINE_COLOR 0 0 0 191
#define BOX_FONT_NO_SHADOW_COLOR 0 0 0 0
#define BOX_FONT_NO_OUTLINE_COLOR 0 0 0 0

#define BOX_CONTENTS_FONT "Tizen:style=Bold"
#define BOX_CONTENTS_FONT_SIZE 30

#define BOX_INFO_FONT "Tizen:style=Bold"
#define BOX_INFO_FONT_SIZE 28

#define BOX_INFO_SHORT_FONT "Tizen:style=Bold"
#define BOX_INFO_SHORT_FONT_SIZE 28

#define BOX_INFO_SUB_FONT "Tizen:style=Regular"
#define BOX_INFO_SUB_FONT_SIZE 24

#define TEXT_CLASS_TIZEN "tizen"
#define TEXT_EFFECT "OUTLINE_SHADOW"

#define QP_NOTI_LEGACY_TITLE_COLOR "T023"
#define QP_NOTI_LEGACY_CONTENTS_COLOR "T024"
#define QP_NOTI_LEGACY_COUNT_COLOR "ATO017"
#define QP_NOTI_LEGACY_TIME_COLOR "T024L1"
#define QP_NOTI_LEGACY_INFO_COLOR "ATO019"
#define QP_NOTI_LEGACY_INFO_SUB_COLOR "T024"

#define QP_NOTI_LEGACY_TITLE_FONT_SIZE 30
#define QP_NOTI_LEGACY_CONTENTS_FONT_SIZE 24
#define QP_NOTI_LEGACY_COUNT_FONT_SIZE 30
#define QP_NOTI_LEGACY_TIME_FONT_SIZE 22
#define QP_NOTI_LEGACY_INFO_FONT_SIZE 26
#define QP_NOTI_LEGACY_INFO_SUB_FONT_SIZE 26

styles {
	style {
		name: "noti_list_title";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_TITLE_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_TITLE_COLOR" ellipsis=1.0 wrap=mixed";
	}
	style {
		name: "noti_list_title_effect";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_TITLE_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_TITLE_COLOR" ellipsis=1.0 wrap=mixed";
	}

	style {
		name: "noti_list_contents";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_CONTENTS_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_CONTENTS_COLOR" ellipsis=1.0 wrap=mixed";
	}
	style {
		name: "noti_list_contents_effect";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_CONTENTS_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_CONTENTS_COLOR" ellipsis=1.0 wrap=mixed";
	}

	style {
		name: "noti_list_count";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_COUNT_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_COUNT_COLOR" ellipsis=1.0 wrap=mixed";
	}
	style {
		name: "noti_list_count_effect";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_COUNT_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_COUNT_COLOR" ellipsis=1.0 wrap=mixed";
	}

	style {
		name: "noti_list_time";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_TIME_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_TIME_COLOR" ellipsis=1.0 wrap=mixed";
	}
	style {
		name: "noti_list_time_effect";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_TIME_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_TIME_COLOR" ellipsis=1.0 wrap=mixed";
	}

	style {
		name: "noti_list_info";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_INFO_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_INFO_COLOR" ellipsis=1.0 wrap=mixed";
	}
	style {
		name: "noti_list_info_effect";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_INFO_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_INFO_COLOR" ellipsis=1.0 wrap=mixed";
	}

	style {
		name: "noti_list_info_sub";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_INFO_SUB_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_INFO_SUB_COLOR" ellipsis=1.0 wrap=mixed";
	}
	style {
		name: "noti_list_info_sub_effect";
		base: "font=Tizen:style=Regular text_class=tizen font_size="QP_NOTI_LEGACY_INFO_SUB_FONT_SIZE" color=#FFFFFF color_class="QP_NOTI_LEGACY_INFO_SUB_COLOR" ellipsis=1.0 wrap=mixed";
	}
}

group {
	name: "quickpanel/listitem_legacy/single_multi";

	script {
		public g_is_show_dim_bg;

		public init_variables() {
			set_int(g_is_show_dim_bg, 0);
		}
	}

	parts {
		part {
			name: "background";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 (QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT + QP_THEME_LIST_ITEM_SEPERATOR_HEIGHT);
				max: -1 (QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT + QP_THEME_LIST_ITEM_SEPERATOR_HEIGHT);
			}
		}
		part {
			name: "seperator.top";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 QP_THEME_LIST_ITEM_SEPERATOR_HEIGHT;
				fixed: 0 1;
				rel1 {
					to: "background";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "background";
					relative: 1.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "seperator.left";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
					to: "background";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "background";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "seperator.right";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
					to: "background";
					relative: 1.0 0.0;
				}
				rel2 {
					to: "background";
					relative: 1.0 1.0;
				}
				align: 1.0 0.0;
			}
		}
		part{
			name: "clip.background";
			type:RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				visible:1;
			}
		}
		part {
			name: "base";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				min: 0 QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT;
				max: -1 QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT;
				rel1 {
					relative: 1.0 1.0;
					to_x: "seperator.left";
					to_y: "seperator.top";
					//offset: -5 -5;
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "seperator.right";
					to_y: "seperator.top";
					//offset: 5 5;
				}
				align: 0.0 0.0;
				color_class: QP_THEME_ITEM_BG_COLOR;
				color: 255 255 255 235;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
			}
		}

		//section layout for margin

		part {
			name: "margin.left";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 9 0;
				fixed: 1 0;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.right";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 8 0;
				fixed: 1 0;
				rel1 {
					to: "base";
					relative: 1.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
				}
				align: 1.0 0.0;
			}
		}
		part {
			name: "margin.left.icon";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 9 0;
				fixed: 1 0;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.top.icon";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 21;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.top.text";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 12;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.bottom";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 14;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 1.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "margin.bottom.thin";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 2;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 1.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
				}
				align: 0.0 1.0;
			}
		}

		//section layout for elements
		//section layout for icon
		part {
			name: "rect.icon.bg";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 46 46;
				max: 46 46;
				fixed: 1 1;
				rel1 {
					to_x:"margin.left.icon";
					to_y:"margin.top.icon";
					relative: 1.0 1.0;
				}
				rel2 {
					to_x:"margin.left.icon";
					to_y:"margin.top.icon";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.icon";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: 46 46;
				max: 46 46;
				rel1 {
					to:"rect.icon.bg";
					relative: 0.5 0.5;
				}
				rel2 {
					to:"rect.icon.bg";
					relative: 0.5 0.5;
				}
				align: 0.5 0.5;
			}
		}
		part {
			name: "rect.icon.sub.padding";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 10;
				fixed: 0 1;
				rel1 {
					to:"rect.icon.bg";
					relative: 0.0 1.0;
				}
				rel2 {
					to:"rect.icon.bg";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.icon.sub";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 29 29;
				max: 29 29;
				fixed: 1 1;
				rel1 {
					to:"rect.icon.sub.padding";
					relative: 1.0 1.0;
				}
				rel2 {
					to:"rect.icon.sub.padding";
					relative: 1.0 1.0;
				}
				align: 1.0 1.0;
			}
		}

		//section layout for texts
		part {
			name: "rect.text.title";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 36;
				max: 9999 36;
				fixed: 1 1;
				rel1 {
					to_x:"rect.icon.bg";
					to_y:"margin.top.text";
					relative: 1.0 1.0;
					offset: +17 0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.top.text";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
			description {
				state: "short" 0.0;
				inherit: "default" 0.0;
				rel1 {
					to_x:"rect.icon.bg";
					to_y:"margin.top.text";
					relative: 1.0 1.0;
					offset: +17 0;
				}
				rel2 {
					to_x:"object.text.count";
					to_y:"margin.top.text";
					relative: 0.0 1.0;
					offset: -13 0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.text.contents";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				max: 9999 36;
				fixed: 1 1;
				rel1 {
					to:"rect.text.title";
					relative: 0.0 1.0;
				}
				rel2 {
					to_x:"object.text.time";
					to_y:"rect.text.title";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.text.info.2";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				fixed: 0 1;
				rel1 {
					to_x:"margin.left";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.bottom";
					relative: 0.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.text.info.sub.2";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				max: 0 27;
				fixed: 1 1;
				rel1 {
					to_x:"margin.right";
					to_y:"margin.bottom";
					relative: 0.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.bottom";
					relative: 0.0 0.0;
				}
				align: 1.0 1.0;
			}
		}
		part {
			name: "rect.text.info.2.short";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					to_x:"margin.left";
					to_y:"rect.text.info.2";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"object.text.info.sub.2";
					to_y:"rect.text.info.2";
					relative: 0.0 1.0;
					offset: -20 0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.text.info.1";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				fixed: 0 1;
				rel1 {
					to_x:"margin.left";
					to_y:"rect.text.info.2";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.info.2";
					relative: 0.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.text.info.1.multiline";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				rel1 {
					to_x:"margin.left";
					to_y:"rect.text.info.1";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.bottom.thin";
					relative: 0.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.text.info.sub.1";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				max: 0 27;
				fixed: 1 1;
				rel1 {
					to_x:"margin.right";
					to_y:"rect.text.info.2";
					relative: 0.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.info.2";
					relative: 0.0 0.0;
				}
				align: 1.0 1.0;
			}
		}
		part {
			name: "rect.text.info.1.short";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					to_x:"margin.left";
					to_y:"rect.text.info.1";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"object.text.info.sub.1";
					to_y:"rect.text.info.1";
					relative: 0.0 1.0;
					offset: -13 0;
				}
				align: 0.0 1.0;
			}
		}

		//section objects
		part{
			name: "object.icon.background";
			type:SWALLOW;
			scale: 1;
			clip_to: "clip.background";
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
		}
		part {
			name: "object.touch.effect";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.to:"base";
				rel2.to:"base";
				color: 0 0 0 0;
				visible: 0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				color_class: BOX_COLOR_BG_HIGHLIGHT;
				visible:0;
			}
			description {
				state: "show.dim" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				color_class: BOX_COLOR_BG_HIGHLIGHT_DIM;
				visible:0;
			}
		}
		part{
			name: "object.icon.bg.dim";
			type:IMAGE;
			scale:1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				image {
					normal:"quick_image_dimmed_port.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
				image {
					normal:"quick_image_dimmed_port.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				image {
					normal:"quick_image_dimmed_land.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:1;
			}
		}
		part{
			name: BOX_PART_ICON;
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				max: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				rel1 {to: "rect.icon";}
				rel2 {to: "rect.icon";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part{
			name: "object.icon.press";
			type:IMAGE;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				max: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				rel1 {to: "rect.icon.bg";}
				rel2 {to: "rect.icon.bg";}
				image {
					normal:"icon_press.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
		}
		part{
			name: BOX_PART_ICON_SUB;
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: BOX_ICON_SUB_SIZE_W BOX_ICON_SUB_SIZE_H;
				max: BOX_ICON_SUB_SIZE_W BOX_ICON_SUB_SIZE_H;
				rel1 {to: "rect.icon.sub";}
				rel2 {to: "rect.icon.sub";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}

		part {
			name: "object.text.title";
			scale: 1;
			type: TEXTBLOCK;
			multiline: 1;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.title";}
				rel2 {to: "rect.text.title";}
				text {
					style: "noti_list_title";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_title_effect";
				}
				visible:1;
			}
		}

		part {
			name: "object.text.contents";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.contents";}
				rel2 {to: "rect.text.contents";}
				text {
					style: "noti_list_contents";
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_contents_effect";
				}
				visible:1;
			}
		}
		part {
			name: "object.text.count";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				min: 0 36;
				max: 79 36;
				rel1 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 0.0;
				}
				text {
					style: "noti_list_count";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
				align: 1.0 0.0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_count_effect";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:1;
			}
		}
		part {
			name: "object.text.time";
			type: TEXTBLOCK;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				max: 100 36;
				rel1 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 1.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 1.0;
				}
				text {
					style: "noti_list_time";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
				align: 1.0 0.0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_time_effect";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:1;
			}
		}
		part {
			name: "object.text.info.1";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.info.1";}
				rel2 {to: "rect.text.info.1";}
				text {
					style: "noti_list_info";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
					align: 0.0 0.5;
				}
				visible:0;
			}
		}
		part {
			name: "object.text.info.1.short";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.info.1.short";}
				rel2 {to: "rect.text.info.1.short";}
				text {
					style: "noti_list_info";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
					align: 0.0 0.5;
				}
				visible:0;
			}
		}
		part {
			name: "object.text.info.1.multiline";
			scale: 1;
			type: TEXTBLOCK;
			multiline: 1;
			description {
				state: "default" 0.0;
				align: 0.0 0.0;
				fixed: 1 1;
				rel1 {
					to: "rect.text.info.1.multiline";
				}
				rel2 {
					to: "rect.text.info.1.multiline";
				}
				text {
					style: "noti_list_info";
					align: 0.0 0.0;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
				}
				visible:0;
			}
		}
		part {
			name: "object.text.info.sub.1";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {
					to: "rect.text.info.sub.1";
					relative: 1.0 0.0;
				}
				rel2 {
					to: "rect.text.info.sub.1";
					relative: 1.0 1.0;
				}
				text {
					style: "noti_list_info_sub";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
				align:1.0 0.0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_sub_effect";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
			}
		}

		part {
			name: "object.text.info.2";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.info.2";}
				rel2 {to: "rect.text.info.2";}
				text {
					style: "noti_list_info";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
					align: 0.0 0.5;
				}
				visible:0;
			}
		}
		part {
			name: "object.text.info.2.short";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.info.2.short";}
				rel2 {to: "rect.text.info.2.short";}
				text {
					style: "noti_list_info";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
					align: 0.0 0.5;
				}
				visible:0;
			}
		}
		part {
			name: "object.text.info.sub.2";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {
					to: "rect.text.info.sub.2";
					relative: 1.0 0.0;
				}
				rel2 {
					to: "rect.text.info.sub.2";
					relative: 1.0 1.0;
				}
				text {
					style: "noti_list_info_sub";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
				align:1.0 0.0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_sub_effect";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
			}
		}
		part {
			name: "object.layer.touch.background";
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			type: RECT;
			description {
				state: "default" 0.0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				color: 0 0 0 0;
			}
		}
		QUICKPANEL_FOCUS_OBJECT("focus", "base", "base")
		part {
			name: "object.layer.touch.button.1";
			mouse_events: 1;
			repeat_events: 0;
			scale: 1;
			type: RECT;
			description {
				state: "default" 0.0;
				rel1 {
					to: "rect.icon";
				}
				rel2 {to: "rect.icon";}
				color: 0 0 0 0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
	}

	programs {
		program {
			name: "init.layout";
			signal: "load";
			source: "";
			in: 0.0 0.0;
			script{
				init_variables();
			}
		}
		program{
			name: "box.show.dim";
			signal: "box.show.dim";
			source: "box.prog";
			script {
				set_int(g_is_show_dim_bg, 1);
			}
		}
		program{
			name: "box.hide.dim";
			signal: "box.hide.dim";
			source: "box.prog";
			script {
				set_int(g_is_show_dim_bg, 0);
			}
		}
		program{
			name: "box.portrait";
			signal: "box.portrait";
			source: "box.prog";
			action: STATE_SET "portrait" 0.0;
			target: "base";
			after: "box.portrait.custom";
		}
		program{
			name: "box.landscape";
			signal: "box.landscape";
			source: "box.prog";
			action: STATE_SET "landscape" 0.0;
			target: "base";
			after: "box.landscape.custom";
		}
		program{
			name: "box.portrait.custom";
			source: "box.prog";
			script {
				if (get_int(g_is_show_dim_bg) == 1) {
					set_state(PART:"object.icon.bg.dim", "portrait", 0.0);
				}
			}
		}
		program{
			name: "box.landscape.custom";
			source: "box.prog";
			script {
				if (get_int(g_is_show_dim_bg) == 1) {
					set_state(PART:"object.icon.bg.dim", "landscape", 0.0);
				}
			}
		}
#ifdef TBD
		program{
			name: "box.touch.down";
			signal: "mouse,clicked,1";
			source: "object.layer.touch.background";
			action: SIGNAL_EMIT "selected" "edje";
		}
#endif
		program{
			name: "effect,mouse,down";
			signal: "mouse,down,1";
			source: "object.layer.touch.background";
			script {
				if (get_int(g_is_show_dim_bg) == 1) {
					set_state(PART:"object.touch.effect", "show.dim", 0.0);
				} else {
					set_state(PART:"object.touch.effect", "show", 0.0);
				}
			}
		}
		program{
			name: "effect,mouse,up";
			signal: "mouse,up,1";
			source: "object.layer.touch.background";
			action: STATE_SET "default" 0.0;
			transition: ACCELERATE 0.20;
			target: "object.touch.effect";
		}
		program{
			name: "box.button.1.touch.clicked";
			signal: "mouse,clicked,1";
			source: "object.layer.touch.button.1";
			action: SIGNAL_EMIT "button_1" "edje";
		}
		program{
			name: "box.button.1.touch.down";
			signal: "mouse,down,1";
			source: "object.layer.touch.button.1";
			action: STATE_SET "show" 0.0;
			target: "object.icon.press";
		}
		program{
			name: "box.button.1.touch.up";
			signal: "mouse,up,1";
			source: "object.layer.touch.button.1";
			action: STATE_SET "hide" 0.0;
			target: "object.icon.press";
		}
		program{
			name: "box.show.icon.bg";
			signal: "box.show.icon.bg";
			source: "box.prog";
			action: STATE_SET "show" 0.0;
			target: "object.layer.touch.button.1";
		}
		program{
			name: "box.hide.icon.bg";
			signal: "box.hide.icon.bg";
			source: "box.prog";
			action: STATE_SET "hide" 0.0;
			target: "object.layer.touch.button.1";
		}
		program{
			name: "box.title.with.icon";
			signal: "box.title.with.icon";
			source: "box.prog";
			action: STATE_SET "default" 0.0;
			target: "rect.text.title";
		}
		program{
			name: "box.title.without.icon";
			signal: "box.title.without.icon";
			source: "box.prog";
			action: STATE_SET "without_icon" 0.0;
			target: "rect.text.title";
		}
		program{
			name: "title.long";
			signal: "title.long";
			source: "prog";
			action: STATE_SET "default" 0.0;
			target: "rect.text.title";
		}
		program{
			name: "title.short";
			signal: "title.short";
			source: "prog";
			action: STATE_SET "short" 0.0;
			target: "rect.text.title";
		}
		MAKE_PART_SHOW_PROGRAM("object.icon.background")
		MAKE_PART_SHOW_PROGRAM("object.icon")
		MAKE_PART_SHOW_PROGRAM("object.icon.sub")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.title")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.contents")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.count")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.time")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.1")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.1.short")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.1.multiline")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.sub.1")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.2")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.2.short")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.sub.2")
	}
}


group {
	name: "quickpanel/listitem_legacy/thumbnail";

	script {
		public g_is_show_dim_bg;

		public init_variables() {
			set_int(g_is_show_dim_bg, 0);
		}
	}

	parts {
		part {
			name: "background";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 (QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT + QP_THEME_LIST_ITEM_SEPERATOR_HEIGHT);
				max: -1 (QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT + QP_THEME_LIST_ITEM_SEPERATOR_HEIGHT);
			}
		}
		part {
			name: "seperator.top";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 QP_THEME_LIST_ITEM_SEPERATOR_HEIGHT;
				fixed: 0 1;
				rel1 {
					to: "background";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "background";
					relative: 1.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "seperator.left";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
					to: "background";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "background";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "seperator.right";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
					to: "background";
					relative: 1.0 0.0;
				}
				rel2 {
					to: "background";
					relative: 1.0 1.0;
				}
				align: 1.0 0.0;
			}
		}
		part{
			name: "clip.background";
			type:RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				visible:1;
			}
		}
		part {
			name: "base";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				min: 0 QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT;
				max: -1 QP_THEME_LIST_ITEM_NOTIFICATION_LEGACY_SINGLE_MULTI_HEIGHT;
				rel1 {
					relative: 1.0 1.0;
					to_x: "seperator.left";
					to_y: "seperator.top";
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "seperator.right";
					to_y: "seperator.top";
				}
				align: 0.0 0.0;
				color_class: QP_THEME_ITEM_BG_COLOR;
				color: 255 255 255 235;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
			}
		}

		//section layout for margin

		part {
			name: "margin.left";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 10 0;
				fixed: 1 0;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.right";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 8 0;
				fixed: 1 0;
				rel1 {
					to: "base";
					relative: 1.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
				}
				align: 1.0 0.0;
			}
		}
		part {
			name: "margin.left.icon";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 10 0;
				fixed: 1 0;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.top.icon";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 21;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.top.text";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 12;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 0.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "margin.bottom";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 10;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 1.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "margin.bottom.thin";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 2;
				fixed: 0 1;
				rel1 {
					to: "base";
					relative: 0.0 1.0;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
				}
				align: 0.0 1.0;
			}
		}

		//section layout for elements
		//section layout for icon
		part {
			name: "rect.icon.bg";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 46 46;
				max: 46 46;
				fixed: 1 1;
				rel1 {
					to_x:"margin.left.icon";
					to_y:"margin.top.icon";
					relative: 1.0 1.0;
				}
				rel2 {
					to_x:"margin.left.icon";
					to_y:"margin.top.icon";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.icon";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: 46 46;
				max: 46 46;
				rel1 {
					to:"rect.icon.bg";
					relative: 0.5 0.5;
				}
				rel2 {
					to:"rect.icon.bg";
					relative: 0.5 0.5;
				}
				align: 0.5 0.5;
			}
		}
		part {
			name: "rect.icon.sub.padding";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 10;
				fixed: 0 1;
				rel1 {
					to:"rect.icon.bg";
					relative: 0.0 1.0;
				}
				rel2 {
					to:"rect.icon.bg";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.icon.sub";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 29 29;
				max: 29 29;
				fixed: 1 1;
				rel1 {
					to:"rect.icon.sub.padding";
					relative: 1.0 1.0;
				}
				rel2 {
					to:"rect.icon.sub.padding";
					relative: 1.0 1.0;
				}
				align: 1.0 1.0;
			}
		}

		//section layout for texts
		part {
			name: "rect.text.title";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 36;
				max: 9999 36;
				fixed: 1 1;
				rel1 {
					to_x:"rect.icon.bg";
					to_y:"margin.top.text";
					relative: 1.0 1.0;
					offset: +17 0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.top.text";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
			description {
				state: "short" 0.0;
				inherit: "default" 0.0;
				rel1 {
					to_x:"rect.icon.bg";
					to_y:"margin.top.text";
					relative: 1.0 1.0;
					offset: +17 0;
				}
				rel2 {
					to_x:"object.text.count";
					to_y:"margin.top.text";
					relative: 0.0 1.0;
					offset: -13 0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.text.contents";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				max: 9999 36;
				fixed: 1 1;
				rel1 {
					to_x:"rect.icon.bg";
					to_y:"rect.text.title";
					relative: 1.0 1.0;
				}
				rel2 {
					to_x:"object.text.time";
					to_y:"rect.text.title";
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part {
			name: "rect.text.info.2";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				fixed: 0 1;
				rel1 {
					to_x:"rect.thumbnail.list.1.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.bottom";
					relative: 0.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.text.info.1";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 27;
				fixed: 0 1;
				rel1 {
					to_x:"rect.thumbnail.list.1.padding";
					to_y:"rect.text.info.2";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.info.2";
					relative: 0.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.text.info.1.multiline";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				rel1 {
					to_x:"rect.thumbnail.list.1.padding";
					to_y:"rect.text.info.1";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"margin.bottom.thin";
					relative: 0.0 0.0;
				}
				align: 0.0 0.0;
			}
		}

		//section layout for thumbnail
		part {
			name: "rect.thumbnail.list.1";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 64 64;
				rel1 {
					to_x:"margin.left.icon";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"margin.left.icon";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.thumbnail.list.1.padding";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 8 0;
				rel1 {
					to:"rect.thumbnail.list.1";
					relative: 1.0 0.0;
				}
				rel2 {
					to:"rect.thumbnail.list.1";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				min: 0 0;
			}
		}
		part {
			name: "rect.thumbnail.list.2";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 64 64;
				rel1 {
					to_x:"rect.thumbnail.list.1.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"rect.thumbnail.list.1.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.thumbnail.list.2.padding";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 8 0;
				rel1 {
					to:"rect.thumbnail.list.2";
					relative: 1.0 0.0;
				}
				rel2 {
					to:"rect.thumbnail.list.2";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				min: 0 0;
			}
		}
		part {
			name: "rect.thumbnail.list.3";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 64 64;
				rel1 {
					to_x:"rect.thumbnail.list.2.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"rect.thumbnail.list.2.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.thumbnail.list.3.padding";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 8 0;
				rel1 {
					to:"rect.thumbnail.list.3";
					relative: 1.0 0.0;
				}
				rel2 {
					to:"rect.thumbnail.list.3";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				min: 0 0;
			}
		}
		part {
			name: "rect.thumbnail.list.4";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 64 64;
				rel1 {
					to_x:"rect.thumbnail.list.3.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"rect.thumbnail.list.3.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				align: 0.0 1.0;
			}
		}
		part {
			name: "rect.thumbnail.list.4.padding";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 8 0;
				rel1 {
					to:"rect.thumbnail.list.4";
					relative: 1.0 0.0;
				}
				rel2 {
					to:"rect.thumbnail.list.4";
					relative: 1.0 1.0;
				}
				align: 0.0 0.0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				min: 0 0;
			}
		}
		part {
			name: "rect.thumbnail.list.5";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 64 64;
				rel1 {
					to_x:"rect.thumbnail.list.4.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				rel2 {
					to_x:"rect.thumbnail.list.4.padding";
					to_y:"margin.bottom";
					relative: 1.0 0.0;
				}
				align: 0.0 1.0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
			}
		}

		part{
			name: "object.icon.background";
			type:SWALLOW;
			scale: 1;
			clip_to: "clip.background";
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part { name: "object.touch.effect";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.to:"base";
				rel2.to:"base";
				color: 0 0 0 0;
				visible: 0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				color_class: BOX_COLOR_BG_HIGHLIGHT;
				visible:1;
			}
			description {
				state: "show.dim" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				color_class: BOX_COLOR_BG_HIGHLIGHT_DIM;
				visible:1;
			}
		}		
		part{
			name: "object.icon.bg.dim";
			type:IMAGE;
			scale:1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				image {
					normal:"quick_image_dimmed_port.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:0;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
				image {
					normal:"quick_image_dimmed_port.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:1;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				image {
					normal:"quick_image_dimmed_land.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:1;
			}
		}
		part{
			name: BOX_PART_ICON;
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				max: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				rel1 {to: "rect.icon";}
				rel2 {to: "rect.icon";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part{
			name: "object.icon.press";
			type:IMAGE;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				max: BOX_ICON_BG_SIZE_W BOX_ICON_BG_SIZE_H;
				rel1 {to: "rect.icon.bg";}
				rel2 {to: "rect.icon.bg";}
				image {
					normal:"icon_press.png";
					border: 0 0 0 0;
					border_scale: 1;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
		}
		part{
			name: BOX_PART_ICON_SUB;
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 1;
				min: BOX_ICON_SUB_SIZE_W BOX_ICON_SUB_SIZE_H;
				max: BOX_ICON_SUB_SIZE_W BOX_ICON_SUB_SIZE_H;
				rel1 {to: "rect.icon.sub";}
				rel2 {to: "rect.icon.sub";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}

		//section thumbnail
		part{
			name: "object.thumbnail.list.1";
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "rect.thumbnail.list.1";}
				rel2 {to: "rect.thumbnail.list.1";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part{
			name: "object.thumbnail.list.2";
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "rect.thumbnail.list.2";}
				rel2 {to: "rect.thumbnail.list.2";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part{
			name: "object.thumbnail.list.3";
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "rect.thumbnail.list.3";}
				rel2 {to: "rect.thumbnail.list.3";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part{
			name: "object.thumbnail.list.4";
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "rect.thumbnail.list.4";}
				rel2 {to: "rect.thumbnail.list.4";}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
		}
		part{
			name: "object.thumbnail.list.5";
			type:SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 0;
				rel1 {to: "rect.thumbnail.list.5";}
				rel2 {to: "rect.thumbnail.list.5";}
				visible: 1;
			}
			description {
				state: "portrait" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "landscape" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "object.text.title";
			scale: 1;
			type: TEXTBLOCK;
			multiline: 1;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.title";}
				rel2 {to: "rect.text.title";}
				text {
					style: "noti_list_title";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_title_effect";
				}
				visible:1;
			}
		}

		part {
			name: "object.text.contents";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.contents";}
				rel2 {to: "rect.text.contents";}
				text {
					style: "noti_list_contents";
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_contents_effect";
				}
				visible:1;
			}
		}
		part {
			name: "object.text.count";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				min: 0 36;
				max: 79 36;
				rel1 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 0.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 0.0;
				}
				text {
					style: "noti_list_count";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
				align: 1.0 0.0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_count_effect";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:1;
			}
		}
		part {
			name: "object.text.time";
			type: TEXTBLOCK;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 42;
				max: 100 36;
				rel1 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 1.0;
				}
				rel2 {
					to_x:"margin.right";
					to_y:"rect.text.title";
					relative: 0.0 1.0;
				}
				text {
					style: "noti_list_time";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:0;
				align: 1.0 0.0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_time_effect";
					align: 1.0 0.5;
					min: 1 0;
				}
				visible:1;
			}
		}
		part {
			name: "object.text.info.1";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.info.1";}
				rel2 {to: "rect.text.info.1";}
				text {
					style: "noti_list_info";
					align: 0.0 0.5;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
					align: 0.0 0.5;
				}
				visible:0;
			}
		}

		part {
			name: "object.text.info.1.multiline";
			scale: 1;
			type: TEXTBLOCK;
			multiline: 1;
			description {
				state: "default" 0.0;
				align: 0.0 0.0;
				fixed: 1 1;
				rel1 {
					to: "rect.text.info.1.multiline";
				}
				rel2 {
					to: "rect.text.info.1.multiline";
				}
				text {
					style: "noti_list_info";
					align: 0.0 0.0;
				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
				}
				visible:0;
			}
		}

		part {
			name: "object.text.info.2";
			scale: 1;
			type: TEXTBLOCK;
			description {
				state: "default" 0.0;
				rel1 {to: "rect.text.info.2";}
				rel2 {to: "rect.text.info.2";}
				text {
					style: "noti_list_info";
					align: 0.0 0.5;

				}
				visible:0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:0;
			}
			description {
				state: "show.effect" 0.0;
				inherit: "default" 0.0;
				text {
					style: "noti_list_info_effect";
					align: 0.0 0.5;
				}
				visible:0;
			}
		}

		part {
			name: "object.layer.touch.background";
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			type: RECT;
			description {
				state: "default" 0.0;
				rel1 {to: "base";}
				rel2 {to: "base";}
				color: 0 0 0 0;
			}
		}
		QUICKPANEL_FOCUS_OBJECT("focus", "base", "base")
		part {
			name: "object.layer.touch.button.1";
			mouse_events: 1;
			repeat_events: 0;
			scale: 1;
			type: RECT;
			description {
				state: "default" 0.0;
				rel1 {
					to: "rect.icon";
				}
				rel2 {to: "rect.icon";}
				color: 0 0 0 0;
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible:1;
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
	}

	programs {
		program {
			name: "init.layout";
			signal: "load";
			source: "";
			in: 0.0 0.0;
			script{
				init_variables();
			}
		}
		program{
			name: "box.show.dim";
			signal: "box.show.dim";
			source: "box.prog";
			script {
				set_int(g_is_show_dim_bg, 1);
			}
		}
		program{
			name: "box.hide.dim";
			signal: "box.hide.dim";
			source: "box.prog";
			script {
				set_int(g_is_show_dim_bg, 0);
			}
		}
		program{
			name: "box.portrait";
			signal: "box.portrait";
			source: "box.prog";
			action: STATE_SET "portrait" 0.0;
			target: "base";

			target: "rect.thumbnail.list.1.padding";
			target: "rect.thumbnail.list.2.padding";
			target: "rect.thumbnail.list.3.padding";
			target: "rect.thumbnail.list.4.padding";
			target: "rect.thumbnail.list.5";

			target: "object.thumbnail.list.5";
			after: "box.portrait.custom";
		}
		program{
			name: "box.landscape";
			signal: "box.landscape";
			source: "box.prog";
			action: STATE_SET "landscape" 0.0;
			target: "base";

			target: "rect.thumbnail.list.1.padding";
			target: "rect.thumbnail.list.2.padding";
			target: "rect.thumbnail.list.3.padding";
			target: "rect.thumbnail.list.4.padding";
			target: "rect.thumbnail.list.5";
			target: "object.thumbnail.list.5";
			after: "box.landscape.custom";
		}
		program{
			name: "box.portrait.custom";
			source: "box.prog";
			script {
				if (get_int(g_is_show_dim_bg) == 1) {
					set_state(PART:"object.icon.bg.dim", "portrait", 0.0);
				}
			}
		}
		program{
			name: "box.landscape.custom";
			source: "box.prog";
			script {
				if (get_int(g_is_show_dim_bg) == 1) {
					set_state(PART:"object.icon.bg.dim", "landscape", 0.0);
				}
			}
		}
#ifdef TBD
		program{
			name: "box.touch.down";
			signal: "mouse,clicked,1";
			source: "object.layer.touch.background";
			action: SIGNAL_EMIT "selected" "edje";
		}
#endif
		program{
			name: "effect,mouse,down";
			signal: "mouse,down,1";
			source: "object.layer.touch.background";
			script {
				if (get_int(g_is_show_dim_bg) == 1) {
					set_state(PART:"object.touch.effect", "show.dim", 0.0);
				} else {
					set_state(PART:"object.touch.effect", "show", 0.0);
				}
			}
		}
		program{
			name: "effect,mouse,up";
			signal: "mouse,up,1";
			source: "object.layer.touch.background";
			action: STATE_SET "default" 0.0;
			transition: ACCELERATE 0.20;
			target: "object.touch.effect";
		}
		program{
			name: "box.button.1.touch.clicked";
			signal: "mouse,clicked,1";
			source: "object.layer.touch.button.1";
			action: SIGNAL_EMIT "button_1" "edje";
		}
		program{
			name: "box.button.1.touch.down";
			signal: "mouse,down,1";
			source: "object.layer.touch.button.1";
			action: STATE_SET "show" 0.0;
			target: "object.icon.press";
		}
		program{
			name: "box.button.1.touch.up";
			signal: "mouse,up,1";
			source: "object.layer.touch.button.1";
			action: STATE_SET "hide" 0.0;
			target: "object.icon.press";
		}
		program{
			name: "box.show.icon.bg";
			signal: "box.show.icon.bg";
			source: "box.prog";
			action: STATE_SET "show" 0.0;

			target: "object.layer.touch.button.1";
		}
		program{
			name: "box.hide.icon.bg";
			signal: "box.hide.icon.bg";
			source: "box.prog";
			action: STATE_SET "hide" 0.0;
			target: "object.layer.touch.button.1";
		}
		program{
			name: "box.title.with.icon";
			signal: "box.title.with.icon";
			source: "box.prog";
			action: STATE_SET "default" 0.0;
			target: "rect.text.title";
		}
		program{
			name: "box.title.without.icon";
			signal: "box.title.without.icon";
			source: "box.prog";
			action: STATE_SET "without_icon" 0.0;
			target: "rect.text.title";
		}
		program{
			name: "title.long";
			signal: "title.long";
			source: "prog";
			action: STATE_SET "default" 0.0;
			target: "rect.text.title";
		}
		program{
			name: "title.short";
			signal: "title.short";
			source: "prog";
			action: STATE_SET "short" 0.0;
			target: "rect.text.title";
		}
		MAKE_PART_SHOW_PROGRAM("object.icon.background")
		MAKE_PART_SHOW_PROGRAM("object.icon")
		MAKE_PART_SHOW_PROGRAM("object.icon.sub")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.title")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.contents")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.count")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.time")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.1")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.1.multiline")
		MAKE_PART_SHOW_TEXT_PROGRAM("object.text.info.2")
		MAKE_PART_SHOW_PROGRAM("object.thumbnail.list.1")
		MAKE_PART_SHOW_PROGRAM("object.thumbnail.list.2")
		MAKE_PART_SHOW_PROGRAM("object.thumbnail.list.3")
		MAKE_PART_SHOW_PROGRAM("object.thumbnail.list.4")
	}
}