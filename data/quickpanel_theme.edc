/*
 * Copyright 2012  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://floralicense.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "quickpanel_theme_def.h"

collections {
	#include "quickpanel_theme_element.edc"

	group { name: "elm/genlist/item/minicontrol/default/default";

		styles {
			style {
				name: "checkbox_text";
				base: "font=Tizen:style=Regular text_class=tizen font_size=26 color=#FFFFFFFF ellipsis=0.0 wrap=mixed";
			}
			style {
				name: "button_text";
				base: "font=Tizen:style=Regular text_class=tizen align=center font_size=28 color=#FFFFFFFF ellipsis=0.0 wrap=mixed";
			}
			style {
				name: "ongoing_content_text";
				base: "font=Tizen:style=Medium text_class=tizen align=left valign=top font_size=30 linegap=-6 ellipsis=1.0 color=#828384FF wrap=mixed";
			}
		}

		alias: "elm/genlist/item_odd/minicontrol/default/default";

		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text";
		data.item: "contents" "elm.icon";
		data.item: "treesize" "20";

		parts {
			part { name: "base";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_MINICONTRL_HEIGHT + QP_THEME_LIST_ITEM_MINICONTR_SEPERATOR_HEIGHT;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "bg_image";
				clip_to: "disclip";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.top";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 20 + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.bottom";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 25;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 1.0;
					align: 0.0 1.0;
				}
			}
			part { name: "elm.padding.left.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.right.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.top.bg";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_MINICONTR_SEPERATOR_HEIGHT;
					fixed: 0 1;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.content.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to_x:"elm.padding.left.bg";
						to_y:"elm.padding.top.bg";
						relative: 1.0 1.0;
					}
					rel2 {
						to_x:"elm.padding.right.bg";
						to_y:"base";
						relative: 0.0 1.0;
					}
					align: 0.0 0.0;
					visible: 1;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.left";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 28 0;
					fixed: 1 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.right";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 18 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.icon";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					rel1 {
						to: "elm.content.bg";
					}
					rel2 {
						to: "elm.content.bg";
					}
				}
			}
			part {
				name: "disclip";
				type: RECT;
				description { state: "default" 0.0;
					rel1.to: "base";
					rel2.to: "base";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 64;
				}
			}
		}
		programs {
			program { name: "go_active";
				signal: "elm,state,selected";
				source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "bg_image";
			}
			program { name: "go_passive";
				signal: "elm,state,unselected";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "bg_image";
				transition: LINEAR 0.1;
			}
			program { name: "go_disabled";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disclip";
			}
			program { name: "go_enabled";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disclip";
			}
		}
	}

	group {	name: "elm/genlist/item/brightness_controller/default/default";
		alias: "elm/genlist/item_odd/brightness_controller/default/default";

		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text.label elm.check.text";
		data.item: "contents" "elm.swallow.thumbnail elm.swallow.slider elm.check.swallow";
		data.item: "states" "elm.check.swallow";

		script {
			public ctnt_shown;
			public time_shown;
		}

		parts {
			part { name: "base";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_BRIGHTNESS_HEIGHT;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "bg_image";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.top";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 20;
					fixed: 0 1;
					visible: 0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.left.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel2.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.right.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.content.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1 {
						to_x:"elm.padding.left.bg";
						relative: 1.0 0.0;
					}
					rel2 {
						to_x:"elm.padding.right.bg";
						relative: 0.0 1.0;
					}
					align: 0.0 0.0;
					visible: 1;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.left";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 28 0;
					fixed: 1 0;
					rel2.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.right";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 28 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.bottom.check.text";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 28;
					fixed: 0 1;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.bottom";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 12;
					fixed: 0 1;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.text.label.rect";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 0 1;
					min: 0 60;
					rel1 {
						to_x:"elm.padding.left";
						to_y:"elm.padding.top";
						relative: 1.0 1.0;
					}
					rel2 {
						to_x:"elm.check.rect";
						to_y:"elm.padding.top";
						relative: 0.0 1.0;
					}
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.text.label";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "elm.text.label.rect";
					}
					rel2 {
						to: "elm.text.label.rect";
					}
					color: 248 246 239 255;
					text {
						font: "Tizen:style=Regular";
						size: 44;
						align: 0.0 1.0;
					}
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.thumbnail";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 80;
					fixed: 0 1;
					visible: 0;
					rel1 {
						to_x:"elm.padding.left";
						to_y:"elm.padding.top";
						relative: 1.0 1.0;
					}
					rel2 {
						to_x:"elm.padding.left";
						to_y:"elm.padding.top";
						relative: 1.0 1.0;
					}
					align: 0.0 0.0;
					visible:0;
				}
			}
			part { name: "elm.rect.thumbnail";
				clip_to: "disclip";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 52 52;
					fixed: 1 1;
					rel1 {
						to_x:"elm.padding.left";
						to_y:"elm.padding.thumbnail";
						relative: 1.0 1.0;
					}
					rel2 {
						to_x:"elm.padding.left";
						to_y:"elm.padding.thumbnail";
						relative: 1.0 1.0;
					}
					align: 0.0 0.0;
					visible:0;
				}
			}
			part { name: "elm.swallow.thumbnail";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "elm.rect.thumbnail";
					}
					rel2 {
						to: "elm.rect.thumbnail";
					}
				}
			}
			part { name: "elm.padding.thumbnail.x";
				clip_to: "disclip";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 6 0;
					fixed: 1 0;
					rel1 {
						to:"elm.rect.thumbnail";
						relative: 1.0 0.0;
					}
					rel2 {
						to:"elm.rect.thumbnail";
						relative: 1.0 1.0;
					}
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.rect.slider";
				clip_to: "disclip";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 20;
					fixed: 0 1;
					rel1 {
						relative: 1.0 0.0;
						to_x: "elm.padding.thumbnail.x";
						to_y: "elm.rect.thumbnail";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.slider.padding.x";
						to_y: "elm.rect.thumbnail";
					}
					align: 0.0 0.5;
					visible:0;
				}
			}
			part { name: "elm.swallow.slider";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 1;
				scale: 1;
				description { 
					state: "default" 0.0;
					fixed: 1 1;
					rel1 {
						to: "elm.rect.slider";
					}
					rel2 {
						to: "elm.rect.slider";
					}
				}
			}
			part { name: "elm.slider.padding.x";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1 {
						relative: 0.0 0.0;
						to: "elm.check.rect";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "elm.check.rect";
					}
					align: 1.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.check.rect";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 48 48;
					fixed: 1 1;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.check.text.padding.x";
						to_y: "elm.padding.bottom.check.text";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.check.text.padding.x";
						to_y: "elm.padding.bottom.check.text";
					}
					align: 1.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.check.swallow";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					rel1 {
						to: "elm.check.rect";
					}
					rel2 {
						to: "elm.check.rect";
					}
				}
			}
			part { name: "elm.check.text.padding.x";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 8 0;
					fixed: 1 0;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.check.text.rect";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.check.text.rect";
					}
					align: 1.0 0.0;
					visible:0;
				}
			}
			part { name: "elm.check.text.rect";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					min: 90 96;
					max: 90 96;
					rel1 {
						relative: 0.0 0.5;
						to_x:"elm.padding.right.bg";
						to_y:"elm.check.rect";
					}
					rel2 {
						relative: 0.0 0.5;
						to_x:"elm.padding.right.bg";
						to_y:"elm.check.rect";
					}
					align: 1.0 0.5;
					visible:0;
				}
			}
			part { name: "elm.check.text";
				clip_to: "disclip";
				type: TEXTBLOCK;
				multiline: 1;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "elm.check.text.rect";
					}
					rel2 {
						to: "elm.check.text.rect";
					}
					text {
						style: "checkbox_text";
						align: 0.0 0.5;
					}
				}
			}
			part { name: "disclip";
				type: RECT;
				description {
					state: "default" 0.0;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 64;
				}
			}
		}

		programs {
			program { name: "show_content";
				signal: "elm,state,elm.swallow.slider,active";
				source: "elm";
				script {
					set_state(PART:"elm.swallow.slider", "show", 0.0);
					set_int(ctnt_shown, 1);
				}
			}
			program { name: "go_active";
				signal: "elm,state,selected";
				source: "elm";
				script {
					set_state(PART:"bg_image", "selected", 0.0);
					set_state(PART:"elm.check.text", "selected", 0.0);
					if (get_int(ctnt_shown) == 1)
					set_state(PART:"elm.swallow.slider", "selected", 0.0);
				}
			}
			program { name: "go_passive";
				signal: "elm,state,unselected";
				source: "elm";
				script {
					set_state(PART:"bg_image", "default", 0.0);
					set_state(PART:"elm.check.text", "default", 0.0);
					if (get_int(ctnt_shown) == 1)
					set_state(PART:"elm.swallow.slider", "show", 0.0);
				}
			}
			program { name: "go_disabled";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disclip";
			}
			program { name: "go_enabled";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disclip";
			}
		}
	}

	group { name: "elm/genlist/item/qp_group_title/default";
		alias: "elm/genlist/item_odd/qp_group_title/default";
		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text.text";
		data.item: "contents" "elm.swallow.icon";
		data.item: "treesize" "20";

		parts {
			part { name: "base";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_GROUP_HEIGHT;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.left";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 26 0;
					fixed: 1 0;
					visible: 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.right";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					visible: 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 1.0 0.0;
				}
			}
			part { name: "elm.padding.top";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 11;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.bottom";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 11;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
				}
			}

			part { name: "elm.rect.text";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 500 0;
					fixed: 1 0;
					rel1 {
						to_x: "elm.padding.left";
						relative: 1.0 0.0;
					}
					rel2 {
						to_x: "elm.padding.left";
						relative: 1.0 1.0;
					}
					align: 0.0 0.0;
					visible:0;
				}
			}
			part { name: "elm.text.text";
				type: TEXT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to: "elm.rect.text";
					}
					rel2 {
						to: "elm.rect.text";
					}
					color: QP_THEME_LIST_TITLE_FONT_COLOR;
					text {
						font: QP_THEME_LIST_TITLE_FONT_NAME;
						text_class: "tizen";
						size: QP_THEME_LIST_TITLE_FONT_SIZE;
						align: 0.0 0.5;
						ellipsis: 0.0;
					}
				}
			}

			part { name: "elm.rect.icon";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 158 58;
					fixed: 1 1;
					rel1 {
						to_x: "elm.padding.right";
						to_y: "elm.padding.top";
						relative: 0.0 1.0;
					}
					rel2 {
						to_x: "elm.padding.right";
						to_y: "elm.padding.bottom";
						relative: 0.0 0.0;
					}
					align: 1.0 0.5;
					visible: 0;
				}
			}
			part { name: "elm.swallow.icon";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to: "elm.rect.icon";
					}
					rel2 {
						to: "elm.rect.icon";
					}
				}
			}
		}
	}

	group { name: "elm/genlist/item/notification_ongoing_item/default";
		alias: "elm/genlist/item_odd/notification_ongoing_item/default";

		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text.title elm.text.content elm.text.content.multiline elm.text.time";
		data.item: "contents" "elm.swallow.icon elm.swallow.thumbnail elm.swallow.progress";
		data.item: "states" "elm.text.content elm.text.content.multiline elm.text.time";

		images {
			image: "quick_icon_bg_02.png" COMP;
		}

		script {
			public ctnt_shown;
			public ctnt_multiline_shown;
			public time_shown;
		}

		parts {
			part { name: "base";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_ONGOING_HEIGHT + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "bg_image";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.top";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 20 + QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.bottom";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 25;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 1.0;
					align: 0.0 1.0;
				}
			}
			part { name: "elm.padding.bottom.text";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 0;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 1.0;
					align: 0.0 1.0;
				}
			}
			part { name: "elm.padding.bottom.progress";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 62;
					fixed: 0 1;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.bottom.icon";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 37;
					fixed: 0 1;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					align: 0.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.left.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.right.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 14 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.top.bg";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 QP_THEME_LIST_ITEM_ONGOING_SEPERATOR_HEIGHT;
					fixed: 0 1;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.content.bg";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to_x:"elm.padding.left.bg";
						to_y:"elm.padding.top.bg";
						relative: 1.0 1.0;
					}
					rel2 {
						to_x:"elm.padding.right.bg";
						to_y:"base";
						relative: 0.0 1.0;
					}
					align: 0.0 0.0;
					visible: 1;
					color: QP_THEME_NOTI_BG_COLOR;
				}
			}
			part { name: "elm.padding.left";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 28 0;
					fixed: 1 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.padding.right";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 18 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					align: 1.0 0.0;
					visible: 0;
				}
			}
			part { name: "elm.rect.thumbnail";
				clip_to: "disclip";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 128 128;
					fixed: 1 1;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
						to_y: "elm.padding.bottom.icon";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
						to_y: "elm.padding.bottom.icon";
					}
					align: 1.0 1.0;
					visible: 0;
				}
			}
			part { name: "elm.thumbnail.bg";
				clip_to: "disclip";
				type: IMAGE;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 0 0;
					rel1 {to: "elm.rect.thumbnail";}
					rel2 {to: "elm.rect.thumbnail";}
					image {
						normal:"quick_icon_bg_02.png";
						border: 0 0 0 0;
						border_scale: 1;
					}
				}
			}
			part { name: "elm.swallow.thumbnail";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					rel1 {
						to: "elm.rect.thumbnail";
					}
					rel2 {
						to: "elm.rect.thumbnail";
					}
					align: 0.5 0.5;
				}
			}
			part { name: "elm.swallow.icon";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					fixed: 1 1;
					rel1 {
						relative: 1.0 1.0;
						to: "elm.rect.thumbnail";
					}
					rel2 {
						relative: 1.0 1.0;
						to: "elm.rect.thumbnail";
					}
					align: 1.0 1.0;
				}
			}

			part { name: "elm.padding.after.icon.right";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 174 0;
					fixed: 1 0;
					rel1 {
						relative: 0.0 0.0;
						to_x: "elm.padding.right";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.right";
					}
					visible: 0;
					align: 1.0 0.0;
				}
			}
			part { name: "elm.text.title";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 50;
					align: 0.0 0.0;
					fixed: 0 1;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.padding.top";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.after.icon.right";
						to_y: "elm.padding.top";
					}
					color: 248 246 239 255;
					text {
						font: "Tizen:style=Regular";
						text_class: "tizen";
						size: 44;
						fit: 0 1;
						ellipsis: 0.0;
						align: 0.0 0.5;
						size_range: 34 44;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 248 246 239 255;
				}
			}
			part { name: "elm.text.time";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					fixed: 0 1;
					min: 0 42;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.text.title";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.after.icon.right";
						to_y: "elm.text.title";
					}
					color: 248 246 239 255;
					text {
						font: "Tizen:style=Regular";
						text_class: "tizen";
						size: 38;
						align: 1.0 0.0;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 248 246 239 255;
				}
			}
			part { name: "elm.rect.content";
				clip_to: "disclip";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					min: 0 42;
					fixed: 0 1;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.text.title";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.padding.after.icon.right";
						to_y: "elm.text.title";
					}
					visible: 0;
				}
			}
			part { name: "elm.text.content";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					min: 0 42;
					fixed: 0 1;
					rel1 {
						to: "elm.rect.content";
					}
					rel2 {
						to: "elm.rect.content";
					}
					color: 130 131 132 255;
					text {
						font: "Tizen:style=Medium";
						text_class: "tizen";
						size: 30;
						fit: 0 1;
						ellipsis: 0.0;
						size_range: 26 30;
						align: 0.0 0.5;
					}
					visible: 0;
				}
				description { state: "show" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 130 131 132 255;
					visible: 1;
				}
			}
			part { name: "elm.rect.content.multiline";
				clip_to: "disclip";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					min: 0 0;
					fixed: 1 1;
					rel1 {
						relative: 1.0 1.0;
						to_x: "elm.padding.left";
						to_y: "elm.text.title";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.after.icon.right";
						to_y: "elm.padding.bottom.text";
					}
					visible: 0;
				}
			}
			part { name: "elm.text.content.multiline";
				clip_to: "disclip";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					fixed: 1 1;
					rel1 {
						to: "elm.rect.content.multiline";
					}
					rel2 {
						to: "elm.rect.content.multiline";
					}
					text {
							style: "ongoing_content_text";
							align: 0.0 0.0;
							fit: 0 0;
					}
					visible:0;
				}
				description { state: "show" 0.0;
					inherit: "default" 0.0;
					visible:1;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 130 131 132 255;
					visible: 1;
				}
			}
			part { name: "elm.swallow.progress";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 20;
					fixed: 0 1;
					rel1 {
						relative: 1.0 0.0;
						to_x: "elm.padding.left";
						to_y: "elm.padding.bottom.progress";
					}
					rel2 {
						relative: 0.0 0.0;
						to_x: "elm.padding.after.icon.right";
						to_y: "elm.padding.bottom.progress";
					}
					align: 0.0 0.0;
				}
			}

			part { name: "disclip";
				type: RECT;
				description {
					state: "default" 0.0;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 64;
				}
			}
		}

		programs {
			program { name: "show_content";
				signal: "elm,state,elm.text.content,active";
				source: "elm";
				script {
					set_state(PART:"elm.text.content", "show", 0.0);
					set_int(ctnt_shown, 1);
				}
			}
			program { name: "show_content_multiline";
				signal: "elm,state,elm.text.content.multiline,active";
				source: "elm";
				script {
					set_state(PART:"elm.text.content.multiline", "show", 0.0);
					set_int(ctnt_multiline_shown, 1);
				}
			}
			program { name: "go_active";
				signal: "elm,state,selected";
				source: "elm";
				script {
					set_state(PART:"bg_image", "selected", 0.0);
					set_state(PART:"elm.text.title", "selected", 0.0);
					set_state(PART:"elm.text.time", "selected", 0.0);
					if (get_int(ctnt_shown) == 1)
						set_state(PART:"elm.text.content", "selected", 0.0);
					if (get_int(ctnt_multiline_shown) == 1)
						set_state(PART:"elm.text.content.multiline", "selected", 0.0);
				}
			}
			program { name: "go_passive";
				signal: "elm,state,unselected";
				source: "elm";
				script {
					set_state(PART:"bg_image", "default", 0.0);
					set_state(PART:"elm.text.title", "default", 0.0);
					set_state(PART:"elm.text.time", "show", 0.0);
					if (get_int(ctnt_shown) == 1)
						set_state(PART:"elm.text.content", "show", 0.0);
					if (get_int(ctnt_multiline_shown) == 1)
						set_state(PART:"elm.text.content.multiline", "show", 0.0);
				}
			}
			program { name: "go_disabled";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disclip";
			}
			program { name: "go_enabled";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disclip";
			}
		}
	}

	group { name: "elm/genlist/item/qp_notibox/default/default";
		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text";
		data.item: "contents" "elm.icon";
		data.item: "treesize" "20";

		parts {
			part { name: "base";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}

			part { name: "bg_image";
				clip_to: "disclip";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
				description {
					state: "selected" 0.0;
					inherit: "default" 0.0;
					color: QP_THEME_BG_COLOR;
					visible: QP_THEME_BG_VISIBILITY;
				}
			}
			part { name: "elm.padding.left";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 0;
					fixed: 1 0;
					visible: 0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.0;
				}
			}

			part { name: "elm.padding.right";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 0;
					fixed: 1 0;
					visible: 0;
					rel1.relative: 1.0  0.0;
					align: 1.0 0.0;
				}
			}
			part { name: "elm.padding.top";
				type: RECT;
				scale: 1;
				description {
				state: "default" 0.0;
					min: 0 0;
					fixed: 0 1;
					visible: 0;
					rel2.relative: 1.0 0.0;
					align: 0.0 0.0;
				}
			}
			part { name: "elm.padding.bottom";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 0;
					fixed: 0 1;
					visible: 0;
					rel1.relative: 0.0 1.0;
					align: 0.0 1.0;
				}
			}

			part { name: "elm.icon";
				clip_to: "disclip";
				type: SWALLOW;
				mouse_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					align: 0.0 0.0;
					rel1 {
						relative: 1 1;
						to_x: "elm.padding.left";
						to_y: "elm.padding.top";
					}
					rel2 {
						relative: 0 0;
						to_x: "elm.padding.right";
						to_y: "elm.padding.bottom";
					}
				}
			}
			part {
				name: "disclip";
				type: RECT;
				description { state: "default" 0.0;
					rel1.to: "base";
					rel2.to: "base";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 64;
				}
			}
		}
		programs {
			program { name: "go_active";
				signal: "elm,state,selected";
				source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "bg_image";
			}
			program { name: "go_passive";
				signal: "elm,state,unselected";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "bg_image";
				transition: LINEAR 0.1;
			}
			program { name: "go_disabled";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disclip";
			}
			program { name: "go_enabled";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disclip";
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////////////

#define NOTI_BUTTON_STATE_ENABLED 0
#define NOTI_BUTTON_STATE_DISABLED 1

	group { name: "elm/button/base/quickpanel_standard";
		images {
			image: "quick_standard_btn_press.png" COMP;
			image: "quick_standard_btn_nor.png" COMP;
		}

		script {
			public button_state = NOTI_BUTTON_STATE_ENABLED;
		}
		parts {
			part { name: "button_image";
				type: IMAGE;
				mouse_events: 1;
				scale: 1;
				description { 
					state: "default" 0.0;
					min: 145 59;
					fixed: 1 1;
					rel1 {
						relative: 0.0 0.0;
					}
					rel2 {
						relative: 1.0 1.0;
					}
					image {
						normal: "quick_standard_btn_nor.png";
						border: 10 10 0 0;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image {
						normal: "quick_standard_btn_press.png";
						border: 10 10 0 0;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
		part {   name: "elm.text.rect";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 0.5 0.5;
					rel1 {
						relative: 0.05 0.05;
						to: "button_image";
					}
					rel2 {
						relative: 0.95 0.95;
						to: "button_image";
					}
			}
		}
		part {   name: "elm.text";
			type: TEXTBLOCK;
			mouse_events: 0;
			scale: 1;
			multiline: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				color: 149 148 148 255;
					rel1 {
						to: "elm.text.rect";
					}
					rel2 {
						to: "elm.text.rect";
					}
				text {
						style: "button_text";
						size: 28;
						align: 0.5 0.5;
						fit: 1 1;
						size_range: 22 28;
				}
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				min: 1 1;
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				min: 1 1;
				color: 255 255 255 255;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				min: 1 1;
			}
			description { state: "focused" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				min: 1 1;
				color: 255 255 255 255;
			}
		}
		part { name: "over1";
			mouse_events: 0;
			description { state: "default" 0.0;
				rel2.relative: 1.0 0.5;
			}
		}
		part { name: "over2";
			mouse_events: 1;
			repeat_events: 1;
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
			}
		}
		part { name: "over3";
			mouse_events: 1;
			repeat_events: 1;
			description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
				color: 0 0 0 0;
			}
		}
		part { name: "disabler";
			type: RECT;
			description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program { name: "button_click";
			signal: "mouse,down,1";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,press" "";
			after: "button_click_anim";
		}
		program { name: "button_click_anim";
			action: STATE_SET "clicked" 0.0;
			target: "button_image";
			target: "elm.text";
		}
		program { name: "button_unpress";
			action: SIGNAL_EMIT "elm,action,unpress" "";
		}
		program { name: "button_mouseout_clicked";
			signal: "mouse,up,1";
			source: "over3";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "clicked") || !strcmp(st, "focused"))
				{
					emit("elm,action,default,text,set", "");
					set_state(PART:"elm.text", "visible", 0.0);
				}
				if(get_int(button_state) != NOTI_BUTTON_STATE_DISABLED)
				{
					set_state(PART:"button_image", "default", 0.0);
				}
			}
			after: button_unpress;
		}
		program { name: "button_unclick3";
			signal: "mouse,clicked,1";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,click" "";
		}
		program { name: "text_show";
			signal: "elm,state,text,visible";
			source: "elm";
			script {
				if(get_int(button_state) != NOTI_BUTTON_STATE_DISABLED)
					set_state(PART:"elm.text", "visible", 0.0);
				else
					set_state(PART:"elm.text", "disabled_visible", 0.0);
			}
		}
		program { name: "text_hide";
			signal: "elm,state,text,hidden";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}

		program { name: "disable";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "button_image";
			target: "disabler";
			after: "disable_text";
		}
		program { name: "disable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
				else
					set_state(PART:"elm.text", "disabled", 0.0);
				set_int(button_state, NOTI_BUTTON_STATE_DISABLED);
			}
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			target: "disabler";
			after: "enable_text";
		}
		program { name: "enable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
				else
					set_state(PART:"elm.text", "default", 0.0);
				set_int(button_state, NOTI_BUTTON_STATE_ENABLED);
			}
		}
		program { name: "focused";
			//signal: "elm,action,focus";
			//source: "elm";
			action: STATE_SET "focused" 0.0;
			target: "button_image";
			target: "elm.text";
		}
		program { name: "unfocused";
			//signal: "elm,action,unfocus";
			//source: "elm";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
		}
		program { name: "reset_button_state";
			signal: "elm,action,button,reset";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "button_image";
		}
	}
}
